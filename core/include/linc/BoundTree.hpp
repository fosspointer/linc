#pragma once
#include <linc/bound_tree/BoundNode.hpp>
#include <linc/bound_tree/BoundExpression.hpp>
#include <linc/bound_tree/BoundLiteralExpression.hpp>
#include <linc/bound_tree/BoundIdentifierExpression.hpp>
#include <linc/bound_tree/BoundBlockExpression.hpp>
#include <linc/bound_tree/BoundTypeExpression.hpp>
#include <linc/bound_tree/BoundIfExpression.hpp>
#include <linc/bound_tree/BoundWhileExpression.hpp>
#include <linc/bound_tree/BoundForExpression.hpp>
#include <linc/bound_tree/BoundUnaryExpression.hpp>
#include <linc/bound_tree/BoundBinaryExpression.hpp>
#include <linc/bound_tree/BoundFunctionCallExpression.hpp>
#include <linc/bound_tree/BoundExternalCallExpression.hpp>
#include <linc/bound_tree/BoundConversionExpression.hpp>
#include <linc/bound_tree/BoundArrayInitializerExpression.hpp>
#include <linc/bound_tree/BoundStructureInitializerExpression.hpp>
#include <linc/bound_tree/BoundIndexExpression.hpp>
#include <linc/bound_tree/BoundAccessExpression.hpp>
#include <linc/bound_tree/BoundDeclaration.hpp>
#include <linc/bound_tree/BoundVariableDeclaration.hpp>
#include <linc/bound_tree/BoundFunctionDeclaration.hpp>
#include <linc/bound_tree/BoundExternalDeclaration.hpp>
#include <linc/bound_tree/BoundStructureDeclaration.hpp>
#include <linc/bound_tree/BoundStatement.hpp>
#include <linc/bound_tree/BoundDeclarationStatement.hpp>
#include <linc/bound_tree/BoundExpressionStatement.hpp>
#include <linc/bound_tree/BoundLabelStatement.hpp>
#include <linc/bound_tree/BoundJumpStatement.hpp>
#include <linc/bound_tree/BoundReturnStatement.hpp>
#include <linc/bound_tree/BoundContinueStatement.hpp>
#include <linc/bound_tree/BoundBreakStatetement.hpp>
#include <linc/bound_tree/BoundProgram.hpp>