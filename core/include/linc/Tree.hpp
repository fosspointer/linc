#pragma once
#include <linc/tree/NodeInfo.hpp>
#include <linc/tree/Node.hpp>
#include <linc/tree/Clause.hpp>
#include <linc/tree/Expression.hpp>
#include <linc/tree/LiteralExpression.hpp>
#include <linc/tree/IdentifierExpression.hpp>
#include <linc/tree/TypeExpression.hpp>
#include <linc/tree/ParenthesisExpression.hpp>
#include <linc/tree/BlockExpression.hpp>
#include <linc/tree/IfExpression.hpp>
#include <linc/tree/WhileExpression.hpp>
#include <linc/tree/MatchExpression.hpp>
#include <linc/tree/ForExpression.hpp>
#include <linc/tree/CallExpression.hpp>
#include <linc/tree/UnaryExpression.hpp>
#include <linc/tree/BinaryExpression.hpp>
#include <linc/tree/ConversionExpression.hpp>
#include <linc/tree/ArrayInitializerExpression.hpp>
#include <linc/tree/IndexExpression.hpp>
#include <linc/tree/AccessExpression.hpp>
#include <linc/tree/EnumeratorExpression.hpp>
#include <linc/tree/StructureInitializerExpression.hpp>
#include <linc/tree/RangeExpression.hpp>
#include <linc/tree/Declaration.hpp>
#include <linc/tree/VariableDeclaration.hpp>
#include <linc/tree/DirectVariableDeclaration.hpp>
#include <linc/tree/FunctionDeclaration.hpp>
#include <linc/tree/ExternalDeclaration.hpp>
#include <linc/tree/StructureDeclaration.hpp>
#include <linc/tree/EnumerationDeclaration.hpp>
#include <linc/tree/AliasDeclaration.hpp>
#include <linc/tree/GenericDeclaration.hpp>
#include <linc/tree/Statement.hpp>
#include <linc/tree/ExpressionStatement.hpp>
#include <linc/tree/DeclarationStatement.hpp>
#include <linc/tree/ReturnStatement.hpp>
#include <linc/tree/ContinueStatement.hpp>
#include <linc/tree/BreakStatement.hpp>
#include <linc/tree/NodeListClause.hpp>
#include <linc/tree/MatchClause.hpp>
#include <linc/tree/EnumeratorClause.hpp>
#include <linc/tree/VariantClause.hpp>
#include <linc/tree/RangedForClause.hpp>
#include <linc/tree/LegacyForClause.hpp>
#include <linc/tree/GenericClause.hpp>
#include <linc/tree/LoopLabel.hpp>