# Exponentiation in linc

;include "utility.linc"

fn pow(base: f64 exponent: i32): f64 {
    exponent_abs: mut i32 = abs_i32(exponent)
    result: mut f64 = 1f64
    count: mut i32 = 0i32

    while (count < exponent_abs) {
        result = result * base
        ++count
    }
    
    if(exponent > 0)
        result
    else
        1f64 / result
}

fn display_pow(base: f64 exponent: i32): void {
    println(@base + " to the power of " + @exponent + " equals " + @pow(base exponent))
}

fn main(): void {
    display_pow(1.5f64 10)
    display_pow(2f64 5)
    display_pow(2f64 10)
    display_pow(2f64 -5)
    display_pow(2f64 0)
    display_pow(3f64 5)
    display_pow(3f64 10)
    display_pow(3f64 -5)
    display_pow(3f64 0)
}